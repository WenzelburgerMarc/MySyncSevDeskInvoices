<?php
/**
* 2007-2023 PrestaShop
*
* NOTICE OF LICENSE
*
* This source file is subject to the Academic Free License (AFL 3.0)
* that is bundled with this package in the file LICENSE.txt.
* It is also available through the world-wide-web at this URL:
* http://opensource.org/licenses/afl-3.0.php
* If you did not receive a copy of the license and are unable to
* obtain it through the world-wide-web, please send an email
* to license@prestashop.com so we can send you a copy immediately.
*
* DISCLAIMER
*
* Do not edit or add to this file if you wish to upgrade PrestaShop to newer
* versions in the future. If you wish to customize PrestaShop for your
* needs please refer to http://www.prestashop.com for more information.
*
*  @author    PrestaShop SA <contact@prestashop.com>
*  @copyright 2007-2023 PrestaShop SA
*  @license   http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
*  International Registered Trademark & Property of PrestaShop SA
*/

if (!defined('_PS_VERSION_')) {
    exit;
}

class MySyncSevDeskInvoices extends Module
{
    protected $config_form = false;

    public function __construct()
    {
        $this->name = 'mysyncsevdeskinvoices';
        $this->tab = 'billing_invoicing';
        $this->version = '1.0.0';
        $this->author = 'Marc From Pangoon';
        $this->need_instance = 0;

        /**
         * Set $this->bootstrap to true if your module is compliant with bootstrap (PrestaShop 1.6)
         */
        $this->bootstrap = true;

        parent::__construct();

        $this->displayName = $this->l('Sync SevDesk Invoices');
        $this->description = $this->l('This Module Synchronizes PrestaShop Invoices With SevDesk');

        $this->confirmUninstall = $this->l('Are You Sure That You Want To Uninstall This Module? No More Invoices Will Get Synchronized With SevDesk!');

        $this->ps_versions_compliancy = array('min' => '1.6', 'max' => _PS_VERSION_);
    }

    /**
     * Don't forget to create update methods if needed:
     * http://doc.prestashop.com/display/PS16/Enabling+the+Auto-Update
     */
    public function install()
    {
        Configuration::updateValue('MY_SYNC_SEVDESK_INVOICES_API_TOKEN', false);

        return $this->installTab() && parent::install();
    }

    public function uninstall()
    {
        Configuration::deleteByName('MY_SYNC_SEVDESK_INVOICES_API_TOKEN');

        return $this->uninstallTab() && parent::uninstall();
    }

    /*
    * Add a new admin menu
    */
    public function installTab()
    {
        $languages = Language::getLanguages();
        $tab = new Tab(); // responsible to add a new admin menu
        $tab->class_name = 'AdminSyncSevDeskModule';
        $tab->module = $this->name;
        $tab->id_parent = (int)Tab::getIdFromClassName('DEFAULT');
        $tab->icon = 'panorama_fish_eye';
        foreach ($languages as $lang) {
            $tab->name[$lang['id_lang']] = $this->l('Sync SevDesk Invoices');
        }

        try {
            $tab->save();
        } catch (Exception $e) {
            echo $e->getMessage();
            return false;
        }
        return true;
    }

    /*
     * Delete the admin menu
     */
    public function uninstallTab()
    {
        $idTab = (int)Tab::getIdFromClassName('AdminSyncSevDeskModule');
        if ($idTab) {
            $tab = new Tab($idTab);
            try {
                $tab->delete();
            } catch (Exception $e) {
                echo $e->getMessage();
                return false;
            }
        }
        return true;
    }

    /**
     * Load the configuration form
     */
    public function getContent()
    {
        /**
         * If values have been submitted in the form, process.
         */
        if (((bool)Tools::isSubmit('submitMyfirstautogeneratedmoduleModule')) == true) {
            $this->postProcess();


        }

        $this->context->smarty->assign('module_dir', $this->_path);

        $output = $this->context->smarty->fetch($this->local_path . 'views/templates/admin/configure.tpl');

        return $output . $this->renderForm();
    }

    /**
     * Create the form that will be displayed in the configuration of your module.
     */
    protected function renderForm()
    {
        $helper = new HelperForm();

        $helper->show_toolbar = false;
        $helper->table = $this->table;
        $helper->module = $this;
        $helper->default_form_language = $this->context->language->id;
        $helper->allow_employee_form_lang = Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG', 0);

        $helper->identifier = $this->identifier;
        $helper->submit_action = 'submitMyfirstautogeneratedmoduleModule';
        $helper->currentIndex = $this->context->link->getAdminLink('AdminModules', false)
            . '&configure=' . $this->name . '&tab_module=' . $this->tab . '&module_name=' . $this->name;
        $helper->token = Tools::getAdminTokenLite('AdminModules');

        $helper->tpl_vars = array(
            'fields_value' => $this->getConfigFormValues(), /* Add values for your inputs */
            'languages' => $this->context->controller->getLanguages(),
            'id_language' => $this->context->language->id,
        );

        return $helper->generateForm(array($this->getConfigForm()));
    }

    /**
     * Create the structure of your form.
     */
    protected function getConfigForm()
    {
        return array(
            'form' => array(
                'legend' => array(
                    'title' => $this->l('Settings'),
                    'icon' => 'icon-cogs',
                ),
                'input' => array(
                    array(
                        'type' => 'text',
                        'label' => $this->l('API Token'),
                        'name' => 'MY_SYNC_SEVDESK_INVOICES_API_TOKEN',
                        'desc' => $this->l('Enter your SevDesk API Token here.'),
                        'required' => true
                    ),
                ),
                'submit' => array(
                    'title' => $this->l('Save'),
                ),
            ),
        );
    }

    /**
     * Set values for the inputs.
     */
    protected function getConfigFormValues()
    {
        return array(
            'MY_SYNC_SEVDESK_INVOICES_API_TOKEN' => Configuration::get('MY_SYNC_SEVDESK_INVOICES_API_TOKEN', ''),
        );
    }

    /**
     * Save form data.
     */
    protected function postProcess()
    {
        $form_values = $this->getConfigFormValues();

        foreach (array_keys($form_values) as $key) {
            Configuration::updateValue($key, Tools::getValue($key));
        }

        $this->context->controller->confirmations[] = $this->l('Settings updated');
    }

    // hook for actionSetInvoice
    public function hookActionSetInvoice($params)
    {
        $sevDeskUrl = 'https://my.sevdesk.de/api/v1/Invoice';
        $sevDeskToken = Configuration::get('MY_SYNC_SEVDESK_INVOICES_API_TOKEN');


    }


}
